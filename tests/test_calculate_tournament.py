from rating import calculate_tournament

data = {
    1: [(7, 1), (4, 1), (2, 1), (3, 1), (5, 1)],
    2: [(6, 1), (3, 1), (1, 0), (4, 1), (8, 1)],
    3: [(8, 1), (2, 0), (5, 1), (1, 0), (6, 1)],
    4: [(5, 1), (1, 0), (8, 1), (2, 0), (10, 1)],
    5: [(4, 0), (6, 1), (3, 0), (7, 1), (1, 0)],
    6: [(2, 0), (5, 0), (7, 1), (10, 1), (3, 0)],
    7: [(1, 0), (12, 1), (6, 0), (5, 0), (14, 1)],
    8: [(3, 0), (15, 1), (4, 0), (12, 1), (2, 0)],
    9: [(26, 1), (22, 1), (10, 0), (19, 1), (11, 0)],
    10: [(24, 1), (11, 1), (9, 1), (6, 0), (4, 0)],
    11: [(25, 1), (10, 0), (23, 1), (22, 1), (9, 1)],
    12: [(18, 1), (7, 0), (14, 0), (8, 0), (13, 0)],
    13: [(17, 1), (16, 1), (15, 1), (14, 0), (12, 1)],
    14: [(21, 1), (18, 1), (12, 1), (13, 1), (7, 0)],
    15: [(16, 1), (8, 0), (13, 0), (17, 0), (23, 1)],
    16: [(15, 0), (13, 0), (17, 1), (None, None), (None, None)],
    17: [(13, 0), (20, 1), (16, 0), (15, 1), (22, 1)],
    18: [(12, 0), (14, 0), (None, None), (None, None), (None, None)],
    19: [(22, 0), (26, 1), (25, 1), (9, 0), (20, 1)],
    20: [(23, 1), (17, 0), (21, 1), (27, 1), (19, 0)],
    21: [(14, 0), (23, 1), (20, 0), (24, 0), (25, 1)],
    22: [(19, 1), (9, 0), (27, 1), (11, 0), (17, 0)],
    23: [(20, 0), (21, 0), (11, 0), (25, 1), (15, 0)],
    24: [(10, 0), (25, 0), (28, 1), (21, 1), (27, 1)],
    25: [(11, 0), (24, 1), (19, 0), (23, 0), (21, 0)],
    26: [(9, 0), (19, 0), (31, 1), (33, 1), (28, 1)],
    27: [(28, 1), (33, 1), (22, 0), (20, 0), (24, 0)],
    28: [(27, 0), (31, 1), (24, 0), (29, 1), (26, 0)],
    29: [(32, 1), (30, 1), (33, 1), (28, 0), (34, 1)],
    30: [(31, 0), (29, 0), (34, 1), (35, 1), (33, 1)],
    31: [(30, 1), (28, 0), (26, 0), (34, 0), (35, 1)],
    32: [(29, 0), (35, 0), (None, None), (36, 1), (37, 1)],
    33: [(36, 1), (27, 0), (29, 0), (26, 0), (30, 0)],
    34: [(35, 1), (36, 1), (30, 0), (31, 1), (29, 0)],
    35: [(34, 0), (32, 1), (36, 1), (30, 0), (31, 0)],
    36: [(33, 0), (34, 0), (35, 0), (32, 0), (39, 1)],
    37: [(None, None), (38, 0), (46, 1), (43, 1), (32, 0)],
    38: [(43, 1), (37, 1), (39, 0), (40, 0), (42, 0)],
    39: [(47, 1), (43, 1), (38, 1), (41, 0), (36, 0)],
    40: [(45, 1), (44, 1), (43, 0), (38, 1), (46, 1)],
    41: [(None, None), (47, 1), (44, 1), (39, 1), (43, 1)],
    42: [(48, 1), (45, 1), (None, None), (44, 1), (38, 1)],
    43: [(38, 0), (39, 0), (40, 1), (37, 0), (41, 0)],
    44: [(46, 1), (40, 0), (41, 0), (42, 0), (48, 1)],
    45: [(40, 0), (42, 0), (48, 1), (46, 1), (None, None)],
    46: [(44, 0), (48, 1), (37, 0), (45, 0), (40, 0)],
    47: [(39, 0), (41, 0), (None, None), (None, None), (None, None)],
    48: [(42, 0), (46, 0), (45, 0), (None, None), (44, 0)]
}

ratings = {
    1: 2527,
    2: 2534,
    3: 2382,
    4: 2464,
    5: 2071,
    6: 2209,
    7: 2255,
    8: 2241,
    9: 1837,
    10: 1715,
    11: 1610,
    12: 1889,
    13: 1500,
    14: 1518,
    15: 1655,
    16: 1600,
    17: 1524,
    18: 1643,
    19: 1474,
    20: 1321,
    21: 1332,
    22: 980,
    23: 960,
    24: 852,
    25: 966,
    26: 769,
    27: 733,
    28: 893,
    29: 574,
    30: 677,
    31: 600,
    32: 426,
    33: 639,
    34: 359,
    35: 558,
    36: 600,
    37: 359,
    38: 323,
    39: 219,
    40: 100,
    41: 2431,
    42: 2393,
    43: 304,
    44: 291,
    45: 162,
    46: 200,
    47: 100,
    48: 100,
}
expected_ratings = {
    1: 2541,
    2: 2535,
    3: 2384,
    4: 2458,
    5: 2111,
    6: 2205,
    7: 2228,
    8: 2238,
    9: 1790,
    10: 1758,
    11: 1642,
    12: 1836,
    13: 1612,
    14: 1628,
    15: 1617,
    16: 1579,
    17: 1536,
    18: 1611,
    19: 1455,
    20: 1335,
    21: 1264,
    22: 1070,
    23: 1000,
    24: 979,
    25: 951,
    26: 875,
    27: 796,
    28: 818,
    29: 714,
    30: 709,
    31: 610,
    32: 488,
    33: 568,
    34: 524,
    35: 508,
    36: 467,
    37: 367,
    38: 314,
    39: 358,
    40: 327,
    41: 2432,
    42: 2394,
    43: 251,
    44: 320,
    45: 238,
    46: 104,
    47: 107,
    48: 100
}


def test_calculate_tournament():
    new_ratings = calculate_tournament(ratings, data)
    rounded_ratings = {key: round(new_ratings[key]) for key in new_ratings}
    assert rounded_ratings == expected_ratings
